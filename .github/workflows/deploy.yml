name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
  push:
    branches:
      - staging
      - production

jobs:
  publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version-file: ".python-version"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel 
          --outdir dist/
      - name: Publish distribution 📦 to Test PyPI
        if: github.ref_name == 'staging'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution 📦 to PyPI
        if: github.ref_name == 'production'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
  scan:
    name: run the sonarqube scan
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - uses: actions/setup-python@v4
        with:
          python-version-file: ".python-version"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[pdf,picture]
          pip install pylint
      - name: lint
        run: pylint --output=lint-report.txt --output-format=parseable ./src
      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.2.1
        with:
          host: ${{ secrets.SONAR_HOST }}
          login: ${{ secrets.SONAR_TOKEN }}
          projectKey: ${{ secrets.SONAR_PROJECTKEY }}
      - name: Archive lint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results
          path: lint-report.txt
          retention-days: 5
